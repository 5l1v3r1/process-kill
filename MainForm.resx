<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>